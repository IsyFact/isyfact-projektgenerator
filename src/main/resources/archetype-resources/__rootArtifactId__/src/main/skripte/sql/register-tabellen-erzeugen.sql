PURGE recyclebin;


CREATE TABLE DEPARTMENT
(
  DEPARTMENTID  VARCHAR2(255 BYTE) NOT NULL,
  DEPARTMENTAREA  VARCHAR2(255 BYTE) NOT NULL,

  CONSTRAINT DEPARTMENT_PK PRIMARY KEY (DEPARTMENTID, DEPARTMENTAREA)
);

CREATE TABLE USERS
(
  USERNAME		VARCHAR2(255 BYTE) NOT NULL,
  DEPARTMENTID	VARCHAR2(255 BYTE) NOT NULL,
  DEPARTMENTAREA	VARCHAR2(255 BYTE) NOT NULL,
  ENTRANCEDATE  TIMESTAMP,

  CONSTRAINT USER_PK PRIMARY KEY (USERNAME, DEPARTMENTID),
  CONSTRAINT DEPARTMENT_FK FOREIGN KEY (DEPARTMENTID, DEPARTMENTAREA) REFERENCES DEPARTMENT (DEPARTMENTID, DEPARTMENTAREA)
);


CREATE TABLE INTERPRET
(
  GEBURTSDATUM  DATE,
  NACHNAME      VARCHAR2(255 BYTE) NOT NULL,
  VORNAME       VARCHAR2(255 BYTE) NOT NULL,
  MAENNLICH     NUMBER,
  VERSION       NUMBER(7),

  CONSTRAINT INTERPRET_PK PRIMARY KEY (NACHNAME, VORNAME)
);

CREATE TABLE CD
(
  ISBN               VARCHAR2(254 BYTE) NOT NULL,
  COVER              BLOB,
  ERSCHEINUNGSDATUM  DATE,
  NACHNAME           VARCHAR2(255 BYTE),
  VORNAME            VARCHAR2(255 BYTE),
  TITEL              VARCHAR2(512 BYTE),
  LIEDTEXTE          CLOB,
  VERSION            NUMBER(7),

  CONSTRAINT CD_PK PRIMARY KEY (ISBN),
  CONSTRAINT FK_INTERPRET FOREIGN KEY (NACHNAME, VORNAME) REFERENCES INTERPRET (NACHNAME, VORNAME)
);

CREATE TABLE BESTAND
(
  ID	   NUMBER(7) NOT NULL,
  ISBN     VARCHAR2(255 BYTE),
  ANZAHL   NUMBER,
  VERSION  NUMBER(7),
  AKTUELLVON TIMESTAMP NOT NULL,
  AKTUELLBIS TIMESTAMP NOT NULL,

  CONSTRAINT BESTAND_PK PRIMARY KEY (ID),
  CONSTRAINT FK_CD FOREIGN KEY (ISBN) REFERENCES CD(ISBN)
);

CREATE SEQUENCE SEQ_BESTAND START WITH 1 INCREMENT BY 1 nomaxvalue;

-- Batch
CREATE TABLE BATCHSTATUS (
    BATCHID VARCHAR2(255) NOT NULL,
    BATCHNAME VARCHAR2(255),
    BATCHSTATUS VARCHAR2(255),
    SATZNUMMERLETZTESCOMMIT NUMBER(19, 0),
    SCHLUESSELLETZTESCOMMIT VARCHAR2(255),
    DATUMLETZTERSTART TIMESTAMP,
    DATUMLETZTERABBRUCH TIMESTAMP,
    DATUMLETZTERERFOLG TIMESTAMP,
    CONSTRAINT PK_BATCHSTATUS PRIMARY KEY (BATCHID)
);

-- Nummernkreis
CREATE TABLE DATUMNUMMERNKREIS (
    SCHLUESSEL VARCHAR2(255 CHAR) NOT NULL,
    AKTUALISIERUNGSDATUM TIMESTAMP,
    NAECHSTENUMMER NUMBER(10,0) NOT NULL,
    VERSION NUMBER(10,0) DEFAULT 0 NOT NULL,
    CONSTRAINT PK_DATUMNUMMERNKREIS PRIMARY KEY (SCHLUESSEL)
);

-- Protokollierung
CREATE TABLE PROTOKOLLDETAIL (
    ID NUMBER(19,0) NOT NULL,
    TYP VARCHAR2(50 CHAR),
    VERSION NUMBER(10,0) DEFAULT 0 NOT NULL,
    PROTEINTRAG_ID NUMBER(19,0),
    CONSTRAINT PK_PROTOKOLLDETAIL PRIMARY KEY (ID)
);

CREATE TABLE PROTOKOLLEINTRAG (
    ID NUMBER(19,0) NOT NULL,
    KORRELATIONSID VARCHAR2(100 CHAR),
    DURCHFUEHRENDEBEHOERDE VARCHAR2(100 CHAR),
    DURCHFUEHRENDERBENUTZERNAME VARCHAR2(100 CHAR),
    GESCHAEFTSVORFALLSTYP VARCHAR2(100 CHAR),
    VERANTWORTLICHEBEHOERDE VARCHAR2(100 CHAR),
    VERANTWORTLICHEBEHOERDEGRUPPE VARCHAR2(100 CHAR),
    VERANTWORTLICHERBENUTZERNAME VARCHAR2(100 CHAR),
    VERSION NUMBER(10,0) DEFAULT 0 NOT NULL,
    ZEITPUNKT TIMESTAMP,
    ERFOLGREICH NUMBER(1,0) NOT NULL,
    CONSTRAINT PK_PROTOKOLLEINTRAG PRIMARY KEY (ID)
);

CREATE TABLE PROTOKOLLTEXT (
    PROTEINTRAG_ID NUMBER(19,0) NOT NULL,
    PROTOKOLLTEXT CLOB,
    VERSION NUMBER(10,0) DEFAULT 0 NOT NULL,
    CONSTRAINT PK_PROTOKOLLTEXT PRIMARY KEY (PROTEINTRAG_ID)
) LOB (PROTOKOLLTEXT) STORE AS SECUREFILE;

CREATE TABLE PROTOKOLLLOESCHSPERRE (
  PROTEINTRAG_ID            NUMBER(19,0) NOT NULL,
  METAINFO_ID               NUMBER(19,0) NOT NULL,
  VERSION                   NUMBER(10,0) DEFAULT 0 NOT NULL,
  CONSTRAINT PK_PROTOKOLLLOESCHSPERRE PRIMARY KEY (PROTEINTRAG_ID)
  -- explicitly no FOREIGN KEY constraint
);

ALTER TABLE PROTOKOLLDETAIL 
    ADD CONSTRAINT FK_PROTOKOLLDETAIL_1 
    FOREIGN KEY (PROTEINTRAG_ID) 
    REFERENCES PROTOKOLLEINTRAG ON DELETE CASCADE;

ALTER TABLE PROTOKOLLTEXT
    ADD CONSTRAINT FK_PROTOKOLLTEXT_1
    FOREIGN KEY (PROTEINTRAG_ID) 
    REFERENCES PROTOKOLLEINTRAG (ID) ON DELETE CASCADE;

CREATE SEQUENCE SEQ_PROTOKOLLDETAIL;
CREATE SEQUENCE SEQ_PROTOKOLLEINTRAG;

-- Indexe des Protokolleintrags
CREATE INDEX IDX_PROTEINTR_KORRID         ON PROTOKOLLEINTRAG          (KORRELATIONSID);
CREATE INDEX IDX_PROTEINTR_DURCHFBEHOERDE ON PROTOKOLLEINTRAG          (DURCHFUEHRENDEBEHOERDE);
CREATE INDEX IDX_PROTEINTR_DURCHFBENNAME  ON PROTOKOLLEINTRAG          (DURCHFUEHRENDERBENUTZERNAME);
CREATE INDEX IDX_PROTEINTR_GVTYP          ON PROTOKOLLEINTRAG          (GESCHAEFTSVORFALLSTYP);
CREATE INDEX IDX_PROTEINTR_VERANTWBEH     ON PROTOKOLLEINTRAG          (VERANTWORTLICHEBEHOERDE);
CREATE INDEX IDX_PROTEINTR_VERANTWBEHGRP  ON PROTOKOLLEINTRAG          (VERANTWORTLICHEBEHOERDEGRUPPE);
CREATE INDEX IDX_PROTEINTR_VERANTWBENNAME ON PROTOKOLLEINTRAG          (VERANTWORTLICHERBENUTZERNAME);
CREATE INDEX IDX_PROTEINTR_ZEITPUNKT      ON PROTOKOLLEINTRAG          (ZEITPUNKT);

-- Indexe der Protokolldetails
CREATE INDEX IDX_PROTDETAIL_TYP           ON PROTOKOLLDETAIL           (TYP);
CREATE INDEX IDX_PROTDETAIL_PROTID        ON PROTOKOLLDETAIL           (PROTEINTRAG_ID);
